
<h1>Books</h1>
<!--@books=Book.all コントローラーで定義したインスタンス変数-->
<!--each文の中に＠books＝bookと定義しているためdo〜end内はbookという名前で使える-->

<table>

<thead>
<tr>
<th>Title</th>
<th>Body</th>
<th colspan="3"></th>
</tr>
</thead>

<tbody>
<% @books.each do |book| %>
<tr>
<td><%= book.title %></td>
<td><%= book.body %></td>
<!--link_toメソッドを使うと画面の推移ができる。HTML上ではaタグに自動変換される。 参考：4章詳細画面を作ろう-->
<%#=>link_to 表示させるテキスト , リンク先URL [,オプション] %>
<!--リンク先URLはrails routesで確認。Prefix名_path(<book.id) -->
<td><%= link_to 'Show' , book_path(book.id) %></td>
<td><%= link_to 'Edit' , edit_book_path(book.id) %></td>
<!--books#destroyはshowと同じPrefix名が割り振られているので、ここで差別化をするためにmethod記述を追加する 参考：7章削除機能を作ろう-->
<td><%= link_to 'Destroy' , book_path(book.id), method: :delete , "data-confirm" => "Are you sure？" %></td>
</tr>
<% end %>
</tbody>

</table>

<h2>New book</h2>
<% if @book.errors.any? %>
  <%= @book.errors.count %> errors prohibited this book from being saved:
  <ul>
    <% @book.errors.full_messages.each do |message| %>
      <li><%= message %></li>
    <% end %>
  </ul>
<% end %>

<!--@book=Book.new コントローラーで定義したインスタンス変数-->
<!-- url どのURLへフォームの情報を送信するか-->
<!--method HTTPメソッドを指定 POSTはデータを新規保存するためのHTTPメソッド-->
<%= form_with model: @book, url: '/books', method: :post do |f| %>

 <!--単一行のテキストフィールド-->

<h4>Title</h4>
<%= f.text_field :title %>


 <!--複数行のテキストフィールド-->
<h4>Body</h4>
<%= f.text_area :body %>

<!--送信ボタン-->
<br>
<%= f.submit 'Create Book' %>

<% end %>